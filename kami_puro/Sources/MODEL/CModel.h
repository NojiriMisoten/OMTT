//=============================================================================
//
// モデル処理 [CModel.h]
// Author : NOJIRI NAOKI
//
//=============================================================================
#ifndef _CMODEL_H_
#define _CMODEL_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "../MAIN/main.h"

//*****************************************************************************
// 構造体
//*****************************************************************************
//----- 頂点フォーマット定義
struct VERTEX {
	D3DXVECTOR3	pos;				// 頂点座標（座標変換あり）
	float		nx, ny, nz;			// 法線ベクトル
	float		tu, tv;				// テクスチャ座標
};

// Xファイルモデル構造体
typedef struct
{
	LPD3DXMESH				pD3DXMeshModel;			// メッシュ情報へのポインタ
	LPD3DXBUFFER			pD3DXBuffMatModel;		// マテリアル情報へのポインタ
	DWORD					nNumMatModel;			// マテリアル情報の数
	WORD					*pIndex;				// インデックスデータ
	VERTEX					*pVertex;				// 頂点情報
	LPDIRECT3DTEXTURE9		*pD3DTexBuff;			// テクスチャ情報を格納する場所のアドレスを確保する場所
	LPDIRECT3DVERTEXDECLARATION9 m_pDecl;
}X_MODEL;

//*****************************************************************************
// 列挙体
//*****************************************************************************
// モデルの種類
typedef enum
{
	MODEL_RING,				// リング
	MODEL_MAX				// モデルタイプ総数
}MODEL_TYPE;

//*****************************************************************************
// クラス宣言
//*****************************************************************************
class CModel
{
public:
	// コンストラクタ
	CModel(void){};

	// デストラクタ
	~CModel(void){};

	// 終了
	static void Uninit( void );

	//===================================================
	// インスタンスクリエイト関数
	// 引数: デバイス
	//===================================================
	static void CreateModel(LPDIRECT3DDEVICE9 *pDevice);

	//===================================================
	// モデルの情報ゲット関数
	// 引数: モデルのタイプ
	// 戻り値: モデルの情報構造体ポインタ
	//===================================================
	static X_MODEL* GetModel(MODEL_TYPE type);

	//===================================================
	// モデルの情報ゲット関数
	// 引数: モデルのファイル
	// 戻り値: モデルの情報構造体ポインタ
	//===================================================
	static X_MODEL* GetModel(char* fileName);

private:
	//===================================================
	// 初期化
	// 引数: デバイス
	// 戻り値: 成否
	//===================================================
	static HRESULT Init( LPDIRECT3DDEVICE9 *pDevice );

	static X_MODEL m_Model[MODEL_MAX];	// モデルの情報バッファ
};

#endif
//----EOF----