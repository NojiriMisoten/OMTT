//=============================================================================
//
// エフェクト管理クラス [CEffectManager.cpp]
// Author : 坂本友希
//
//=============================================================================
#include "CEffectManager.h"
//=============================================================================
// 実体定義
//=============================================================================
//マネージャー
::Effekseer::        Manager*           CEffectManager::m_pManager;
//描画用インスタンス
::EffekseerRenderer::Renderer*          CEffectManager::m_pRenderer;
//デバイス
                     LPDIRECT3DDEVICE9 *CEffectManager::m_pDevice;
//=============================================================================
// マクロ定義
//=============================================================================
const int INSTANCE_MAX = 4000;
//=============================================================================
// 構造体定義
//=============================================================================

//=============================================================================
// プロトタイプ宣言
//=============================================================================

//=============================================================================
// グローバル変数の宣言
//=============================================================================

//=============================================================================
//コンストラクタ
//=============================================================================
CEffectManager::CEffectManager( LPDIRECT3DDEVICE9 *device )
{
	//マネージャーの初期化
	m_pManager = NULL;
	//描画用インスタンスの初期化
	m_pRenderer = NULL;
	//デバイス確保〜
	m_pDevice = device;
}
//=============================================================================
//デストラクタ
//=============================================================================
CEffectManager::~CEffectManager( )
{

}
//=============================================================================
//クリエイト
//=============================================================================

//=============================================================================
//初期化処理
//=============================================================================
void CEffectManager::Init( )
{
	// 描画用インスタンスの生成
	m_pRenderer = ::EffekseerRendererDX9::Renderer::Create(*m_pDevice, INSTANCE_MAX);
	
	// エフェクト管理用インスタンスの生成
	m_pManager = ::Effekseer::Manager::Create(INSTANCE_MAX);

	// 描画用インスタンスから描画機能を設定
	m_pManager->SetSpriteRenderer( m_pRenderer->CreateSpriteRenderer( ) );
	m_pManager->SetRibbonRenderer( m_pRenderer->CreateRibbonRenderer( ) );
	m_pManager->SetRingRenderer(   m_pRenderer->CreateRingRenderer( ) );
	m_pManager->SetModelRenderer(  m_pRenderer->CreateModelRenderer( ) );

	// 描画用インスタンスからテクスチャの読込機能を設定
	// 独自拡張可能、現在はファイルから読み込んでいる。
	m_pManager->SetTextureLoader(m_pRenderer->CreateTextureLoader());
	m_pManager->SetModelLoader(m_pRenderer->CreateModelLoader());
	

}
//=============================================================================
// 終了処理
//=============================================================================
void CEffectManager::Uninit()
{
	// 先にエフェクト管理用インスタンスを破棄
	m_pManager->Destroy( );

	// 次に描画用インスタンスを破棄
	m_pRenderer->Destory( );
}
//=============================================================================
// 更新処理
//=============================================================================
void CEffectManager::Update()
{

}
//=============================================================================
// 描画処理
//=============================================================================
void CEffectManager::Draw()
{

}
