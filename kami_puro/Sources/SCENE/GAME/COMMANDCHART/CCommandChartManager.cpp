//=============================================================================
//
//	CCommandChartManagerクラスの処理(CCommandChartManager.cpp)
//
//	Author : 佐藤　諒一
//
//=============================================================================
// インクルード
#include "CCommandChartManager.h"
#include "../../../CONST/const.h"

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// static
//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CCommandChart* CCommandChartManager::m_pCommandChart[MAX_PLAYER_NUM-1];

//-----------------------------------------------------------------------------
//	コンストラクタ
//-----------------------------------------------------------------------------
CCommandChartManager::CCommandChartManager()
{
	// コマンドチャートクラス格納用のポインタをNULLに
	for (int i = 0; i < MAX_PLAYER_NUM; i++)
	{
		m_pCommandChart[i] = NULL;
	}
}

//-----------------------------------------------------------------------------
//	デストラクタ
//-----------------------------------------------------------------------------
CCommandChartManager::~CCommandChartManager()
{
}

//-----------------------------------------------------------------------------
//	生成処理
//-----------------------------------------------------------------------------
void CCommandChartManager::Create(LPDIRECT3DDEVICE9* pDevice)
{
	// コマンドチャートマネージャの初期化
	Init(pDevice);
}

//-----------------------------------------------------------------------------
//	初期化処理
//-----------------------------------------------------------------------------
void CCommandChartManager::Init(LPDIRECT3DDEVICE9* pDevice)
{
	// コマンドチャートの生成
	m_pCommandChart[0] = CCommandChart::Create(pDevice, PLAYER_NUMBER_1);
	m_pCommandChart[1] = CCommandChart::Create(pDevice, PLAYER_NUMBER_2);
}

//-----------------------------------------------------------------------------
//	更新処理
//-----------------------------------------------------------------------------
void CCommandChartManager::Update(void)
{
	// コマンドチャートの更新
	m_pCommandChart[0]->Update();
	m_pCommandChart[1]->Update();
}

//-----------------------------------------------------------------------------
//	描画処理
//-----------------------------------------------------------------------------
void CCommandChartManager::Draw(void)
{
	// コマンドチャートの描画
	m_pCommandChart[0]->Draw();
	m_pCommandChart[1]->Draw();
}

//-----------------------------------------------------------------------------
//	終了処理
//-----------------------------------------------------------------------------
void CCommandChartManager::Uninit(void)
{
	// コマンドチャートの終了
	m_pCommandChart[0]->Uninit();
	m_pCommandChart[1]->Uninit();
	
	// 後片付け
	SAFE_DELETE(m_pCommandChart[0]);
	SAFE_DELETE(m_pCommandChart[1]);
}

// EOF