//=============================================================================
//
//	CCommandChartManagerクラスの処理(CCommandChartManager.cpp)
//
//	Author : 佐藤　諒一
//
//=============================================================================
// インクルード
#include "CCommandChartManager.h"
#include "CCommandChart.h"
#include "../../../CONST/const.h"

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// static
//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CCommandChart* CCommandChartManger::m_pCommandChart;

//-----------------------------------------------------------------------------
//	コンストラクタ
//-----------------------------------------------------------------------------
CCommandChartManger::CCommandChartManger()
{
	// コマンドチャートクラス格納用のポインタをNULLに
	m_pCommandChart = NULL;
}

//-----------------------------------------------------------------------------
//	デストラクタ
//-----------------------------------------------------------------------------
CCommandChartManger::~CCommandChartManger()
{
}

//-----------------------------------------------------------------------------
//	生成処理
//-----------------------------------------------------------------------------
void CCommandChartManger::Create(LPDIRECT3DDEVICE9* device)
{
	// コマンドチャートの生成
	Init(device);
}

//-----------------------------------------------------------------------------
//	初期化処理
//-----------------------------------------------------------------------------
void CCommandChartManger::Init(LPDIRECT3DDEVICE9* device)
{
	// コマンドチャートの生成
	m_pCommandChart = new CCommandChart(device);
	// 生成したコマンドチャートの初期化
	m_pCommandChart->Init();
}

//-----------------------------------------------------------------------------
//	更新処理
//-----------------------------------------------------------------------------
void CCommandChartManger::Update(void)
{
	// コマンドチャートの更新
	m_pCommandChart->Update();
}

//-----------------------------------------------------------------------------
//	描画処理
//-----------------------------------------------------------------------------
void CCommandChartManger::Draw(void)
{
	// コマンドチャートの描画
	m_pCommandChart->Draw();
}

//-----------------------------------------------------------------------------
//	終了処理
//-----------------------------------------------------------------------------
void CCommandChartManger::Uninit(void)
{
	// コマンドチャートの終了
	m_pCommandChart->Uninit();
	
	// 後片付け
	SAFE_DELETE(m_pCommandChart);
}

// EOF