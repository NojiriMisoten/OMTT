//=============================================================================
//
// CRopeManagerManagerクラス [CRopeManagerManager.cpp]
// Author : 塚本俊彦
//
//=============================================================================
//*****************************************************************************
// インクルード
//*****************************************************************************
#include "CRopeManager.h"
#include "CRope.h"

//*****************************************************************************
// 定数
//*****************************************************************************
static const TEXTURE_TYPE ROPE_TEXTURE = TEXTURE_NUMBER;

//=============================================================================
// コンストラクタ
//=============================================================================
CRopeManager::CRopeManager(LPDIRECT3DDEVICE9 *pDevice, CManager *pManager)
{
	m_pD3DDevice = pDevice;
	m_pManager = pManager;
	m_pRope = NULL;
}

//=============================================================================
// デストラクタ
//=============================================================================
CRopeManager::~CRopeManager(void)
{

}

//=============================================================================
// 初期化
//=============================================================================
void CRopeManager::Init()
{
	m_pRope = CRope::Create(m_pD3DDevice,
		D3DXVECTOR3(0, 10, -15), 100, 10, 10, 1,TEXTURE_HP_GAGE_G, m_pManager);
	m_pRope->SetRot(D3DXVECTOR3(-D3DX_PI * 0.5f, 0, 0));
}

//=============================================================================
// 終了
//=============================================================================
void CRopeManager::Uninit(void)
{
}

//=============================================================================
// 更新
//=============================================================================
void CRopeManager::Update(void)
{
}

//=============================================================================
// ゴムアニメ―ションスタート
// 引っ張る力、その手を離すまでのフレームカウント
//=============================================================================
void CRopeManager::Pull(float pullPower, int pullInterval)
{
	m_pRope->Pull(pullPower, pullInterval);
}

//----EOF----