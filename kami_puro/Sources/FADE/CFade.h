//=============================================================================
//
// CFadeクラス [CFade.h]
// Author : 野尻　尚希
//
//=============================================================================
#ifndef _CFADE_H_
#define _CFADE_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "../BASE_OBJECT/CScene2D.h"

//*****************************************************************************
// 列挙体
//*****************************************************************************
// フェードの状態
typedef enum
{
	MODE_FADE_NULL,		// 何もなし
	MODE_FADE_IN,		// フェードイン状態
	MODE_FADE_IN_END,	// フェードイン終了
	MODE_FADE_OUT,		// フェードアウト状態
	MODE_FADE_OUT_END,	// フェードアウト終了
	MODE_FADE_INFINITY,	// 無限フェード
	MODE_FADE_MAX
}FADE_MODE;

//*****************************************************************************
// マクロ
//*****************************************************************************
static const D3DXCOLOR		DEFFAULT_FADE_IN_COLOR(1.f, 1.f, 1.f, 1.f);							// デフォルトのフェードインの色
static const D3DXCOLOR		DEFFAULT_FADE_OUT_COLOR(1.f, 1.f, 1.f, 0.f);						// デフォルトのフェードアウトの色
static const float			DEFFAULT_FADE_WIDTH = 2000.f;										// デフォルトのフェードの幅
static const float			DEFFAULT_FADE_HEIGHT = 2000.f;										// デフォルトのフェードの高さ
static const int			DEFFAULT_FADE_TIME = 60;											// デフォルトのフェード時間

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CFade : public CScene2D
{
public:
	//=================================================================
	// コンストラクタ
	// 引数: デバイス、(プライオリティ)
	// 戻り値: 成否
	//=================================================================
	CFade(LPDIRECT3DDEVICE9 *pDevice);

	// デストラクタ
	~CFade();

	//=================================================================
	// クリエイト関数
	// 引数: 座標、テクスチャーの種類
	// 戻り値: 成否
	//=================================================================
	void Init(TEXTURE_TYPE texType);

	// 終了
	void Uninit(void);

	// 更新
	void Update(void);

	// 描画
	void DrawFadeRender(void);

	//=================================================================
	// フェードスタート関数
	// 引数:したいフェードの種類、フェードの色、フェードの時間
	//=================================================================
	void Start(FADE_MODE mode, D3DXCOLOR color, int endToTime);

	//=================================================================
	// 状態の取得
	// 戻り値:現在のフェードモード
	//=================================================================
	static FADE_MODE GetMode(void){return m_mode;};

private:
	static FADE_MODE	m_mode;			// 状態
	D3DXCOLOR			m_color;		// 色
	int					m_nEndTime;		// 終了時間
	bool				m_bFade;		// フェードフラグ
	float				m_fMovAlpha;	// 透明度(速度)
};
#endif
//----EOF----