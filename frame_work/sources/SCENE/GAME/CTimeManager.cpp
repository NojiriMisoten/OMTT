//=============================================================================
//
// CTimeManagerクラス [CTimeManager.cpp]
// Author : 塚本　俊彦
//
//=============================================================================
//*****************************************************************************
// インクルード
//*****************************************************************************
#include <Windows.h>
#include "CTimeManager.h"
#include "../CSCENE/CSceneScore.h"
#include "../../DEBUG_PROC/CDebugProc.h"


//*****************************************************************************
// マクロ
//*****************************************************************************
// 残り時間表示ステータス
// 座標
const D3DXVECTOR3 TIMER_POSITION = D3DXVECTOR3(670, 30, 0);
// 大きさ
const float TIMER_WIDTH = 30;
const float TIMER_HEIGHT = 48;
// テクスチャ
const TEXTURE_TYPE TIMER_TEXTURE = TEXTURE_NUMBER_WHITE;


//*****************************************************************************
// 静的メンバ変数
//*****************************************************************************

//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CTimeManager::CTimeManager(LPDIRECT3DDEVICE9* pDevice, short nGameTime)
{
	// 制限時間表示
	m_pTimeNumber = new CSceneScore(pDevice);
	m_pTimeNumber->Init(TIMER_POSITION, TIMER_WIDTH, TIMER_HEIGHT, TIMER_TEXTURE);
	m_pTimeNumber->Add(nGameTime);

	// タイマー初期化
	m_nTimeCur = 0;
	m_TimeLast = 0;
	m_nGameTimer = 0;

	// ゲームの制限時間
	m_nGameTime = nGameTime;
}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CTimeManager ::~CTimeManager(void)
{
}

//*****************************************************************************
// 初期化
//*****************************************************************************
void CTimeManager::Init()
{
	// タイマー初期化
	m_nTimeCur = 0;
	timeBeginPeriod(1);
	m_TimeLast = timeGetTime();
	timeEndPeriod(1);
}

//*****************************************************************************
// 終了
//*****************************************************************************
void CTimeManager::Uninit(void)
{
	
}

//*****************************************************************************
// 更新
//*****************************************************************************
void CTimeManager::Update(void)
{
	// 現在の時間取得
	timeBeginPeriod(1);
	m_nTimeCur = timeGetTime();
	timeEndPeriod(1);

	// １秒経過処理 1000ミ秒 = 1秒
	if (m_nTimeCur - m_TimeLast > 1000){
		m_TimeLast = m_nTimeCur;
		m_pTimeNumber->Add(-1);
		m_nGameTimer++;
	}
}

//----EOF-------