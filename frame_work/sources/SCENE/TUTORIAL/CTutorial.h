//=============================================================================
//
// CTutorialクラス [CTutorial.h]
// Author : 塚本俊彦
//
//=============================================================================
#ifndef _CTUTORIAL_H_
#define _CTUTORIAL_H_
//*****************************************************************************
// インクルード
//*****************************************************************************
#include "../../MAIN/main.h"
#include "../../PHASE/CPhase.h"

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CScene2D;
class CSceneAnime;

//*****************************************************************************
// 定数
//*****************************************************************************
const short TUTORIAL_PAGE_MAX = 4;
const short TUTORIAL_PICT_MAX = 3;

//*****************************************************************************
// クラス定義
//*****************************************************************************
class CTutorial : public CPhase
{
public:
	// コンストラクタ
	CTutorial(void);

	// デストラクタ
	~CTutorial(void);

	//=================================================================
	// 初期化関数
	// 引数: シーンのモード, デバイス
	//=================================================================
	void Init(MODE_PHASE mode, LPDIRECT3DDEVICE9* pDevice);

	// 終了
	void Uninit(void);

	// 更新
	void Update(void);

	//=================================================================
	// クリエイト関数
	// 引数: シーンのモード, デバイス
	// 戻り値: このシーンのアドレス
	//=================================================================
	static CTutorial* Create(MODE_PHASE mode, LPDIRECT3DDEVICE9* pDevice);

private:

	// 矢印アニメーション更新
	void UpdateArrow();

	// 背景
	CScene2D* m_pBackGround;
	// チュートリアルの絵
	CScene2D* m_p2D[TUTORIAL_PICT_MAX];
	// 絵の移動量
	D3DXVECTOR3 m_vVelo;
	// 左右どっちに動いてるのフラグ
	bool m_bRight;
	// ページ数
	short m_nPage;
	// 画面の横にある絵の添え字番号
	short m_nPictNumLeft;
	short m_nPictNumCenter;
	short m_nPictNumRight;
	// 矢印のアニメーション　本当はテクスチャアニメーションでやろうかと思ったけどやっぱやめた
	CSceneAnime *m_pArrowRight;
	CSceneAnime *m_pArrowLeft;
	// 矢印の拡大フラグ
	bool m_bArrowScale;
	// 矢印拡大までのカウント
	int m_nArrowCount;
	// ページ表示の絵
	CScene2D *m_pPage2D;
};

#endif
//----EOF----