//=============================================================================
//
// デバッグ情報処理 [CDebugProc.h]
// Author : 野尻　尚希
//
//=============================================================================
#ifndef _CDEBUGPROC_H_
#define _CDEBUGPROC_H_

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "../MAIN/main.h"

//*****************************************************************************
// クラス宣言
//*****************************************************************************
class CDebugProc
{
public:
	// コンストラクタ
	CDebugProc(void);

	// デストラクタ
	~CDebugProc(void);

	//==============================================
	// 初期化処理
	// 戻り値:成否
	//==============================================
	HRESULT Init(void);

	// 終了処理
	void Uninit(void);

	// 描画処理
	static void Draw(void);

	//=================================================
	// 登録処理
	// 引数:表示したい文字(%d等含む)、%d等に対応する変数
	//==================================================
	static void Print(const char *fmt, ...);

	//=================================================
	// 表示してるかのフラグセット処理
	// 引数:フラグ
	//==================================================
	static void SetDrawDisp(bool bDisp){m_bDisp = bDisp;};

	//=================================================
	// 座標ログ吐き出し処理
	// 引数:ファイル名、座標
	//==================================================
	static void PrintLog_Pos(char* fileName, D3DXVECTOR3 pos);

	//=================================================
	// バッファクリア処理
	// 引数:ファイル名、座標
	//==================================================
	static void ClearBuff(void);

private:
	static const int LENGTH_STRING_BUFF = 1028; // 最大表示文字数

	static LPD3DXFONT m_pD3DXFONT;				// フォントへのポインタ
	static char m_aStr[LENGTH_STRING_BUFF];		// デバッグ表示用の文字列のバッファ
	static bool m_bDisp;						// デバッグ表示ON/OFF
	static int	m_nCounter;						// 文字数カウンター
};

#endif
//----EOF----